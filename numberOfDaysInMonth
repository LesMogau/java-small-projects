public class DaysInMonth {

    // Method to check if a year is a leap year
    public static boolean isLeapYear(int year) {
        // Check if the year is in the valid range
        if (year < 1 || year > 9999) {
            return false;
        }
        
        // Leap year check: divisible by 4 but not 100, or divisible by 400
        if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {
            return true;
        }
        return false;
    }

    // Method to return the number of days in a given month of a given year
    public static int getDaysInMonth(int month, int year) {
        // Check for invalid month or year
        if (month < 1 || month > 12 || year < 1 || year > 9999) {
            return -1;  // Invalid month or year
        }
        
        // Switch statement to return days based on the month
        switch (month) {
            case 1: // January
            case 3: // March
            case 5: // May
            case 7: // July
            case 8: // August
            case 10: // October
            case 12: // December
                return 31;  // These months have 31 days
                
            case 4: // April
            case 6: // June
            case 9: // September
            case 11: // November
                return 30;  // These months have 30 days
                
            case 2: // February
                // Check if the year is a leap year for February
                if (isLeapYear(year)) {
                    return 29;  // Leap year February has 29 days
                } else {
                    return 28;  // Non-leap year February has 28 days
                }
                
            default:
                return -1;  // If an invalid month is passed, though this shouldn't happen due to earlier checks
        }
    }
}
